module half_adder(
    input A,      // Input A
    input B,      // Input B
    output Sum,   // Output Sum
    output Carry  // Output Carry
);

    // Sum is the XOR of A and B
    assign Sum = A ^ B;

    // Carry is the AND of A and B
    assign Carry = A & B;

endmodule

`timescale 1ns / 1ps

module half_adder_tb;

    // Inputs
    reg A;
    reg B;

    // Outputs
    wire Sum;
    wire Carry;

    // Instantiate the Half-Adder
    half_adder uut (
        .A(A), 
        .B(B), 
        .Sum(Sum), 
        .Carry(Carry)
    );

    // Test Stimulus
    initial begin
        $display ("")
        $monitor ("%g\t %b   %b     %b      %b", $time, A, B, Sum, Carry);
        A = 0; B = 0; #10;
        A = 0; B = 1; #10;
        A = 1; B = 0; #10;
        A = 1; B = 1; #10;
        $finish;
    end
      
endmodule
